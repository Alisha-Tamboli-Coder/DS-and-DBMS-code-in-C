#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void merge(int arr[], int l, int m, int r) {
    int n1 = m - l + 1, n2 = r - m;
    int L[n1], R[n2];

    for (int i = 0; i < n1; i++) 
		L[i] = arr[l + i];
    for (int j = 0; j < n2; j++) 
		R[j] = arr[m + 1 + j];

    int i = 0, j = 0, k = l;
    while (i < n1 && j < n2) 
	arr[k++] = (L[i] < R[j]) ? L[i++] : R[j++];
    while (i < n1) 
	arr[k++] = L[i++];
    while (j < n2) 
	arr[k++] = R[j++];
}

void mergeSort(int arr[], int l, int r) {
    if (l < r) {
        int m = (l + r) / 2;
        mergeSort(arr, l, m); // left
        mergeSort(arr, m + 1, r); // right
        merge(arr, l, m, r);
    }
}

int main() {
    int n;
    printf("Enter size of random array: ");
    scanf("%d", &n);

    int arr[n];
    // srand(time(NULL));

    printf("Random array: ");
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 100;
        printf("%d ", arr[i]);
    }

    mergeSort(arr, 0, n - 1);

    printf("\nSorted array: ");
    for (int i = 0; i < n; i++) 
        printf("%d ", arr[i]);
}
